services:
  # ============================================================================
  # Spark Cluster Services
  # ============================================================================
  
  spark-master:
    build:
      context: .
      dockerfile: spark/Dockerfile
    container_name: spark-master
    command: ["master"]
    working_dir: /workspace
    environment:
      SPARK_MASTER_HOST: spark-master
      SPARK_MASTER_PORT: 7077
      SPARK_MASTER_WEBUI_PORT: 8080
    ports:
      - "7077:7077"
      - "8080:8080"
      - "6066:6066"
    volumes:
      - spark-history:/opt/spark/history
      - .:/workspace
    networks:
      - spark-net

  spark-worker:
    build:
      context: .
      dockerfile: spark/Dockerfile
    # container_name: spark-worker
    command: ["worker"]
    working_dir: /workspace
    depends_on:
      - spark-master
    environment:
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 2g
    # ports:
    #   - "8081:8081"
    volumes:
      - spark-history:/opt/spark/history
      - .:/workspace
    networks:
      - spark-net

  spark-history:
    build:
      context: .
      dockerfile: spark/Dockerfile
    container_name: spark-history
    command: ["history"]
    working_dir: /workspace
    depends_on:
      - spark-master
    ports:
      - "18080:18080"
    volumes:
      - spark-history:/opt/spark/history
      - .:/workspace
    networks:
      - spark-net

  # ============================================================================
  # Airflow Services
  # ============================================================================
  
  postgres:
    image: postgres:16
    container_name: airflow-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    networks:
      - spark-net
    restart: always

  airflow-webserver:
    build:
      context: .
      dockerfile: airflow/Dockerfile
    container_name: airflow-webserver
    command: webserver
    depends_on:
      postgres:
        condition: service_healthy
      spark-master:
        condition: service_started
    environment:
      # Database
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      
      # Spark connection
      AIRFLOW_CONN_SPARK_DEFAULT: spark://spark-master:7077
      
      # Core settings
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'False'
      
      # Webserver settings
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'True'
      AIRFLOW__WEBSERVER__RBAC: 'True'
      AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 8081
      
      # API settings
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
    ports:
      - "8081:8081"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/config:/opt/airflow/config
      - .:/workspace
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - spark-net
    restart: always

  airflow-scheduler:
    build:
      context: .
      dockerfile: airflow/Dockerfile
    container_name: airflow-scheduler
    command: scheduler
    depends_on:
      airflow-webserver:
        condition: service_healthy
      postgres:
        condition: service_healthy
      spark-master:
        condition: service_started
    environment:
      # Database
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      
      # Spark connection
      AIRFLOW_CONN_SPARK_DEFAULT: spark://spark-master:7077
      
      # Core settings
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'False'
      
      # Scheduler settings
      AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 30
      AIRFLOW__SCHEDULER__CATCHUP_BY_DEFAULT: 'False'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/config:/opt/airflow/config
      - .:/workspace
    healthcheck:
      test: ["CMD", "airflow", "jobs", "check", "--job-type", "SchedulerJob", "--hostname", "airflow-scheduler"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - spark-net
    restart: always

volumes:
  spark-history:
  postgres-db-volume:

networks:
  spark-net:
    driver: bridge
